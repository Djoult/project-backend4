{
  "openapi": "3.0.1",
  "info": {
    "version": "2.0.2",
    "title": "Drink Master",
    "description": "Showing off drink master backend",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [
    { "url": "https://drinkmaster-backend.onrender.com/api" },
    { "url": "http://localhost:3000/api" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Recipes",
      "description": "Recipes endpoints"
    },
    {
      "name": "Glass list",
      "description": "Glass list endpoints"
    },
    {
      "name": "Subscribe",
      "description": "Subscribe endpoints"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/verify/{verificationToken}": {
      "get": {
        "tags": ["Auth"],
        "summary": "User`s verification email",
        "parameters": [
          {
						"in": "path",
						"name": "verificationToken",
						"required": true,
						"type": "string",
						"description": "Verification token"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operations",
            "content": {
              "html": {
                "html": "Redirect to login"
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [],
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Return current user's data",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/auth/update": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Return uploaded avatarURL/name",
        "security": [{ "Bearer": [] }],
        "parameters": [],
        "requestBody": {
          "description": "Update username",
          "required": false,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestMultipart"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/category-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return a categories of recipes",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "type": "string",
            "description": "Ascending or descending sorting. Default: asc"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category-list"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/ingredient-list": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return ingridients that will be in the sample",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "type": "string",
            "description": "Ascending or descending sorting. Default: asc"
          },
          {
            "in": "query",
            "required": false,
            "name": "title",
            "type": "string",
            "description": "Title"
          },
          {
            "in": "query",
            "required": false,
            "name": "page",
            "type": "integer",
            "description": "Page"
          },
          {
            "in": "query",
            "required": false,
            "name": "limit",
            "type": "integer",
            "description": "Limit"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IngredientsList"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/main-page": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return list of recipes of given categories for the main page",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "category",
            "type": "string",
            "description": "Category"
          },
          {
            "in": "query",
            "required": false,
            "name": "samples",
            "type": "integer",
            "description": "Samples"
          },
          {
            "in": "query",
            "required": false,
            "name": "categoryCount",
            "type": "integer",
            "description": "Category Count"
          },
          {
            "in": "query",
            "required": false,
            "name": "thumb",
            "type": "boolean",
            "description": "Thumb"
          },
          {
            "in": "query",
            "required": false,
            "name": "instructions",
            "type": "boolean",
            "description": "Instructions"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecipesMainPage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/search": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return search by specified criteria with the ability to sort by one field",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "drink",
            "type": "string",
            "description": "Drink"
          },
          {
            "in": "query",
            "required": false,
            "name": "category",
            "type": "string",
            "description": "Category"
          },
          {
            "in": "query",
            "required": false,
            "name": "ingredient",
            "type": "string",
            "description": "Ingredient"
          },
          {
            "in": "query",
            "required": false,
            "name": "glass",
            "type": "string",
            "description": "Glass"
          },
          {
            "in": "query",
            "required": false,
            "name": "page",
            "type": "integer",
            "description": "Page"
          },
          {
            "in": "query",
            "required": false,
            "name": "limit",
            "type": "integer",
            "description": "Limit"
          },
          {
            "in": "query",
            "required": false,
            "name": "own",
            "type": "boolean",
            "description": "Own"
          },
          {
            "in": "query",
            "required": false,
            "name": "favorite",
            "type": "boolean",
            "description": "Favorite"
          },
          {
            "in": "query",
            "required": false,
            "name": "thumb",
            "type": "boolean",
            "description": "Thumb"
          },
          {
            "in": "query",
            "required": false,
            "name": "instructions",
            "type": "boolean",
            "description": "Instructions"
          },
          {
            "in": "query",
            "required": false,
            "name": "sort",
            "type": "string",
            "description": "Sort"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Search"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/popular": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return list of recipes added by users to favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "ingredient",
            "type": "string",
            "description": "Ingredient"
          },
          {
            "in": "query",
            "required": false,
            "name": "category",
            "type": "string",
            "description": "Category"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Popular"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/favorite": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return list of recipes that the current user has added to favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "ingredient",
            "type": "string",
            "description": "Ingredient"
          },
          {
            "in": "query",
            "required": false,
            "name": "category",
            "type": "string",
            "description": "Category"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Popular"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "/recipes/favorite/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return recipe by id, which is added to favorites by the current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string",
						"description": "Enter ID of recipe"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteById"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
      "patch": {
        "tags": ["Recipes"],
        "summary": "return adds/removes a recipe with the given id to favorites",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string",
						"description": "Enter ID of recipe"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FavoriteById"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      }
    },
    "recipes/own": {
			"get": {
				"tags": ["Recipes"],
				"summary": "return list of all recipes added by the current user",
				"security": [{ "Bearer": [] }],
        "parameters": [
          {
            "in": "query",
            "required": false,
            "name": "ingredient",
            "type": "string",
            "description": "Ingredient"
          },
          {
            "in": "query",
            "required": false,
            "name": "category",
            "type": "string",
            "description": "Category"
          }
        ],
				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/OwnAll"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {}
					},
					"404": {
						"description": "Not found",
						"content": {}
					},

					"500": {
						"description": "Server error",
						"content": {}
					}
				}
			},
			"post": {
				"tags": ["Recipes"],
				"summary": "adding own recipe",
				"security": [{ "Bearer": [] }],
				"parameters": [],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"required": [
								"drink",
								"category",
								"glass",
								"instructions",
								"ingredients"
							],
							"schema": {
								"$ref": "#/components/schemas/My-recipe"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Recipe added successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/My-recipe-Response"
								}
							}
						}
					},
					"400": {
						"description": "Bad Request",
						"content": {}
					},
					"401": {
						"description": "Unauthorized",
						"content": {}
					},
					"404": {
						"description": "Not found",
						"content": {}
					},

					"409": {
						"description": "Name of drink already exists",
						"content": {}
					},

					"500": {
						"description": "Server error",
						"content": {}
					}
				}
			}
		},
    "/recipes/own/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "return recipe by id added by the current user",
        "security": [{ "Bearer": [] }],
        "parameters": [
          {
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string",
						"description": "Get own recipe by id"
          }
        ],

        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOwnById"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {}
          },
          "401": {
            "description": "Unauthorized",
            "content": {}
          },
          "404": {
            "description": "Not found",
            "content": {}
          },
          "500": {
            "description": "Server error",
            "content": {}
          }
        }
      },
			"delete": {
				"tags": ["Recipes"],
				"summary": "removes a recipe by id added by the current user",
				"security": [{ "Bearer": [] }],

				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"type": "string",
						"description": "ID of the recipe to be removed"
					}
				],

				"responses": {
					"200": {
						"description": "Successful operation",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RemoveOwnById"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized",
						"content": {}
					},
					"404": {
						"description": "Not found",
						"content": {}
					},

					"500": {
						"description": "Server error",
						"content": {}
					}
				}
			}
    }

  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Alibaba"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "Alibaba"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "needVerification": {
              "type": "boolean",
              "description": "Is user need a verification",
              "example": "true"
            }
          }
        },
        "example": [
          { "email": "1@gmail.com", "name": "Alibaba", "needVerification": "true" }
        ]
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "Test123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication token",
            "example": "wre35R4y3234.jdrit45fk4OrJ45.235wetKFF3460"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            },
            "example": {
              "name": "Alex",
              "email": "user@example.com"
            }
          }
        }
      },
      "CurrentResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name"
              },
              "avatarURL": {
                "type": "string",
                "description": "User's avatar URL"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            },
            "example": {
              "name": "Alex",
              "email": "user@example.com",
              "avatarURL": "null"
            }
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logout succes"
          }
        },
        "example": {
          "message": "Logout succes"
        }
      },
      "UpdateRequestMultipart": {
        "type": "object",
        "properties": {
          "filename": {
            "type": "string",
            "format": "binary"
          },
          "name": {
            "type": "string"
          }
        },
        "example": {
          "filename": "<binary_data>",
          "name": "New Username"
        }
      },
      "UpdateResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Username updated"
              },
              "email": {
                "type": "string",
                "description": "User`s mail",
                "format":"email"
              },
              "avatarURL": {
                "type": "string",
                "description": "User avatar URL updated"
              }
            },
            "example": {
              "name": "Alibaba",
              "email":"1@gmail.com",
              "avatarURL": "https://example.com/update-avatar1.jpg"
            }
          }
        }
      },
      "VerifyEmailRequest": {
        "type": "object",
        "properties": {
          "verificationCode": {
            "type": "string",
            "description": "Verification emailr password",
            "example": "qwerty1111111"
          }
        }
      },
      "VerifyResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Email user@email.com verified successfully."
          },
          "token": {
            "type": "string",
            "description": "User's token",
            "example": "12345678901112"
          },
          "refreshToken": {
            "type": "string",
            "description": "User's refreshToken",
            "example": "12345678901112"
          }
        }
      },
      "IngredientsList": {
				"type": "array",
				"items": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string",
							"description": "Ingredient's id",
							"example": "64e9fa8d3c1392483f04d966"
						},
						"title": {
							"type": "string",
							"description": "Ingredient's name",
							"example": "Highball glass"
						},
						"ingredientThumb": {
							"type": "string",
							"description": "Image of ingredient",
							"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth.png"
						},
						"thumb-medium": {
							"type": "string",
							"description": "Image of ingredient medium",
							"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Medium.png"
						},
						"thumb-small": {
							"type": "string",
							"description": "Image of ingredient small",
							"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Small.png"
						}
					}
				},
				"example": [
					{
						"_id": "64e781d9779d52dc8ef3fa35",
						"title": "Sweet Vermouth",
						"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth.png",
						"thumb-medium": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Medium.png",
						"thumb-small": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Small.png"
					},
					{
						"_id": "64e781d9779d52dc8ef3fa3e",
						"title": "Blended whiskey",
						"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Blended%20whiskey.png",
						"thumb-medium": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Blended%20whiskey-Medium.png",
						"thumb-small": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Blended%20whiskey-Small.png"
					},
					{
						"_id": "64e781d9779d52dc8ef3fa31",
						"title": "Light rum",
						"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Light%20rum.png",
						"thumb-medium": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Light%20rum-Medium.png",
						"thumb-small": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Light%20rum-Small.png"
					},
					{
						"_id": "64e781d9779d52dc8ef3fa36",
						"title": "Strawberry schnapps",
						"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Strawberry%20schnapps.png",
						"thumb-medium": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Strawberry%20schnapps-Medium.png",
						"thumb-small": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Strawberry%20schnapps-Small.png"
					}
				]
			},
      "RecipesMainPage": {
				"type": "object",
				"properties": {
					"category": {
						"type": "array",
						"items": {
							"type": "object",
							"required": ["drink", "category", "glass", "ingredients"],
							"properties": {
								"_id": {
									"type": "string",
									"description": "Recipe's id",
									"example": "639b6de9ff77d221f190c570"
								},
								"drink": {
									"type": "string",
									"description": "Recipe's name",
									"example": "Dragonfly"
								},
								"description": {
									"type": "string",
									"description": "Description of cocktail",
									"example": "The porn star martini is a passion-fruit-flavoured cocktail made with vanilla-flavoured vodka, Passoã, passion fruit juice, and lime juice. It is traditionally accompanied by a chilled shot glass of prosecco. "
								},
								"category": {
									"type": "string",
									"description": "Category",
									"example": "Coffee / Tea"
								},
								"glass": {
									"type": "string",
									"description": "Type of glass",
									"example": "Irish coffee cup"
								},
								"instructions": {
									"type": "array",
									"items": {
										"type": "string",
										"description": "instructions how prepare cocktail",
										"example": "Heat the coffee, whiskey and sugar; do not boil. Pour into glass and t…"
									}
								},
								"drinkThumb": {
									"type": "string",
									"description": "image of cocktail",
									"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167155/cocktails…"
								},
								"ingredients": {
									"type": "array",
									"items": {
										"type": "object",
										"required": ["title", "measure"],
										"properties": {
											"_id": {
												"type": "string",
												"description": "Ingredient's id",
												"example": "64e9fa8d3c1392483f04d966"
											},
											"title": {
												"type": "string",
												"description": "Ingredient's name",
												"example": "Highball glass"
											},
											"ingredientThumb": {
												"type": "string",
												"description": "Image of ingredient",
												"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth.png"
											},
											"thumb-medium": {
												"type": "string",
												"description": "Image of ingredient medium",
												"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Medium.png"
											},
											"thumb-small": {
												"type": "string",
												"description": "Image of ingredient small",
												"example": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth-Small.png"
											},
											"measure": {
												"type": "string",
												"description": "Quantity",
												"example": "1 1/2 oz"
											}
										}
									}
								}
							}
						}
					}
				},

				"example": {
					"Cocoa": [
						{
							"_id": "639b6de9ff77d221f190c57b",
							"drink": "Drinking Chocolate",
							"description": "",
							"category": "Cocoa",
							"glass": "Coffee mug",
							"instructions": [
								"Heat the cream and milk with the cinnamon and vanilla bean very slowly for 15-20 minutes. (If you don't have any beans add 1-2 tsp of vanilla after heating). Remove the bean and cinnamon. Add the chocolate. Mix until fully melted. Serve topped with some very dense fresh whipped cream. Serves 1-2 depending upon how much of a glutton you are. For a richer chocolate, use 4 oz of milk, 4 oz of cream, 4 oz of chocolate. Serve in coffee mug."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167144/cocktails-v1/drinks/Drinking_Chocolate.jpg",
							"ingredients": [
								{
									"title": "Heavy cream",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169606/cocktails-v1/ingredient/Heavy%20cream.png",
									"measure": "2 oz ",
									"_id": "64f0ce34989c1ff1b23c32dc"
								},
								{
									"title": "Milk",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Milk.png",
									"measure": "6-8 oz ",
									"_id": "64f0ce34989c1ff1b23c32dd"
								},
								{
									"title": "Cinnamon",
									"ingredientThumb": "",
									"measure": "1 stick ",
									"_id": "64f0ce34989c1ff1b23c32de"
								},
								{
									"title": "Vanilla",
									"ingredientThumb": "",
									"measure": "1 ",
									"_id": "64f0ce34989c1ff1b23c32df"
								},
								{
									"title": "Chocolate",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Chocolate.png",
									"measure": "2 oz finely chopped dark ",
									"_id": "64f0ce34989c1ff1b23c32e0"
								},
								{
									"title": "Whipped cream",
									"ingredientThumb": "",
									"measure": "Fresh ",
									"_id": "64f0ce34989c1ff1b23c32e1"
								}
							]
						},
						{
							"_id": "639b6de9ff77d221f190c5cb",
							"drink": "Chocolate Drink",
							"description": "",
							"category": "Cocoa",
							"glass": "Coffee mug",
							"instructions": [
								"Melt the bar in a small amount of boiling water. Add milk. Cook over low heat, whipping gently (with a whisk, i would assume) until heated well. Don't let it boil! Serve in coffee mug."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167144/cocktails-v1/drinks/Chocolate_Drink.jpg",
							"ingredients": [
								{
									"title": "Chocolate",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Chocolate.png",
									"measure": "125 gr",
									"_id": "64f0ce34989c1ff1b23c3498"
								},
								{
									"title": "Milk",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Milk.png",
									"measure": "3/4 L ",
									"_id": "64f0ce34989c1ff1b23c3499"
								},
								{
									"title": "Water",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169615/cocktails-v1/ingredient/Water.png",
									"_id": "64f0ce34989c1ff1b23c349a"
								}
							]
						},
						{
							"_id": "639b6de9ff77d221f190c5eb",
							"drink": "Nuked Hot Chocolate",
							"description": "",
							"category": "Cocoa",
							"glass": "Coffee mug",
							"instructions": [
								"Mix with a bit of milk (1 oz or so) in coffee mug. Nuke mug for about 30-50 seconds. Stir until the heated cocoa dissolves. Fill mug with milk. Nuke for 1-2 minutes, depending on wattage and preferences as to burnt mouth parts."
							],
							"drinkThumb": "https://storage.googleapis.com/cocktails-v1/drinks/Nuked_Hot_Chocolate/Nuked_Hot_Chocolate.jpg",
							"ingredients": [
								{
									"title": "Cocoa powder",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169606/cocktails-v1/ingredient/Cocoa%20powder.png",
									"measure": "2 tsp ",
									"_id": "64f0ce34989c1ff1b23c349b"
								},
								{
									"title": "Sugar",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sugar.png",
									"measure": "1 tsp ",
									"_id": "64f0ce34989c1ff1b23c349c"
								},
								{
									"title": "Vanilla extract",
									"ingredientThumb": "",
									"measure": "1/2 tsp ",
									"_id": "64f0ce34989c1ff1b23c349d"
								},
								{
									"title": "Milk",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Milk.png",
									"measure": "12 oz ",
									"_id": "64f0ce34989c1ff1b23c349e"
								}
							]
						}
					],
					"Coffee / Tea": [
						{
							"_id": "639b6de9ff77d221f190c5a6",
							"drink": "Herbal flame",
							"description": "",
							"category": "Coffee / Tea",
							"glass": "Mason jar",
							"instructions": [
								"Pour Hot Damn 100 in bottom of a jar or regular glass. Fill the rest of the glass with sweet tea. Stir with spoon, straw, or better yet a cinnamon stick and leave it in."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167154/cocktails-v1/drinks/Herbal_flame.jpg",
							"ingredients": [
								{
									"title": "Hot Damn",
									"ingredientThumb": "",
									"measure": "5 shots ",
									"_id": "64f0ce34989c1ff1b23c368d"
								},
								{
									"title": "Tea",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Tea.png",
									"measure": "very sweet ",
									"_id": "64f0ce34989c1ff1b23c368e"
								}
							]
						},
						{
							"_id": "639b6de9ff77d221f190c62d",
							"drink": "Frappé",
							"description": "",
							"category": "Coffee / Tea",
							"glass": "Highball Glass",
							"instructions": [
								"Mix together. Blend at highest blender speed for about 1 minute. Pour into a glass and drink with a straw. Notes: This works best if everything is cold (if you make fresh coffee, mix it with the milk and let it sit in the fridge for 1/2 hour. If it is not frothy, add more milk, or even just some more milk powder. The froth gradually turns to liquid at the bottom of the glass, so you will find that you can sit and drink this for about 1/2 hour, with more iced coffee continually appearing at the bottom. Very refreshing."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167149/cocktails-v1/drinks/Frapp%C3%A9.jpg",
							"ingredients": [
								{
									"title": "Coffee",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Coffee.png",
									"measure": "1/2 cup black ",
									"_id": "64f0ce34989c1ff1b23c37f1"
								},
								{
									"title": "Milk",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Milk.png",
									"measure": "1/2 cup ",
									"_id": "64f0ce34989c1ff1b23c37f2"
								},
								{
									"title": "Sugar",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sugar.png",
									"measure": "1-2 tsp ",
									"_id": "64f0ce34989c1ff1b23c37f3"
								}
							]
						},
						{
							"_id": "64ef5215c87dbc0330171454",
							"drink": "Dragffffonfly",
							"description": "",
							"category": "Coffee / Tea",
							"glass": "Highball glass",
							"instructions": [""],
							"drinkThumb": "",
							"ingredients": [
								{
									"title": "Highball glass",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sweet%20Vermouth.png",
									"measure": "1 1/2 oz",
									"_id": "64e9fa8d3c1392483f04d966"
								}
							]
						}
					],
					"Shot": [
						{
							"_id": "639b6de9ff77d221f190c590",
							"drink": "Lemon Shot",
							"description": "",
							"category": "Shot",
							"glass": "Shot glass",
							"instructions": [
								"Mix Galliano and Absolut Citron in a shot glass, lay lemon wedge sprinkled with sugar over glass and pour a rum over wedge and glass. light rum with a lighter and let burn for a second. Do shot quickly and suck on lemon. If it is done correctly, this will taste like a shot of sweet lemonade."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167155/cocktails-v1/drinks/Lemon_Shot.jpg",
							"ingredients": [
								{
									"title": "Galliano",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Galliano.png",
									"measure": "1/2 oz ",
									"_id": "64f0ce34989c1ff1b23c34e5"
								},
								{
									"title": "Absolut Citron",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169604/cocktails-v1/ingredient/Absolut%20Citron.png",
									"measure": "1/2 oz ",
									"_id": "64f0ce34989c1ff1b23c34e6"
								},
								{
									"title": "Lemon",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169610/cocktails-v1/ingredient/Lemon.png",
									"measure": " wedge\n",
									"_id": "64f0ce34989c1ff1b23c34e7"
								},
								{
									"title": "Sugar",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sugar.png",
									"measure": "Bacardi ",
									"_id": "64f0ce34989c1ff1b23c34e8"
								},
								{
									"title": "151 proof rum",
									"ingredientThumb": "",
									"_id": "64f0ce34989c1ff1b23c34e9"
								}
							]
						},
						{
							"_id": "639b6de9ff77d221f190c651",
							"drink": "Kool-Aid Slammer",
							"description": "",
							"category": "Shot",
							"glass": "Shot glass",
							"instructions": [
								"Fill half the shot glass with the kool-aid first. Then put a paper towel over the top of the glass and slowly pour in the vodka. If you do it right, you should be able to see that the two liquids are separated, with the vodka on top. Now slam it! The last thing you'll taste is the kool-aid."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167161/cocktails-v1/drinks/Kool-Aid_Slammer.jpg",
							"ingredients": [
								{
									"title": "Kool-Aid",
									"ingredientThumb": "",
									"measure": "1/2 oz Grape ",
									"_id": "64f0ce34989c1ff1b23c3815"
								},
								{
									"title": "Vodka",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Vodka.png",
									"measure": "1/2 oz ",
									"_id": "64f0ce34989c1ff1b23c3816"
								}
							]
						},
						{
							"_id": "639b6de9ff77d221f190c64d",
							"drink": "Kool-Aid Shot",
							"description": "",
							"category": "Shot",
							"glass": "Old-fashioned glass",
							"instructions": [
								"Pour into a large glass with ice and stir. Add a little cranberry juice to taste."
							],
							"drinkThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689167161/cocktails-v1/drinks/Kool-Aid_Shot.jpg",
							"ingredients": [
								{
									"title": "Vodka",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Vodka.png",
									"measure": "1 shot ",
									"_id": "64f0ce34989c1ff1b23c377c"
								},
								{
									"title": "Amaretto",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Amaretto.png",
									"measure": "1 shot ",
									"_id": "64f0ce34989c1ff1b23c377d"
								},
								{
									"title": "Sloe gin",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Sloe%20gin.png",
									"measure": "1 shot ",
									"_id": "64f0ce34989c1ff1b23c377e"
								},
								{
									"title": "Triple sec",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169611/cocktails-v1/ingredient/Triple%20sec.png",
									"measure": "1 shot ",
									"_id": "64f0ce34989c1ff1b23c377f"
								},
								{
									"title": "Cranberry juice",
									"ingredientThumb": "http://res.cloudinary.com/dec1shvoo/image/upload/v1689169605/cocktails-v1/ingredient/Cranberry%20juice.png",
									"_id": "64f0ce34989c1ff1b23c3780"
								}
							]
						}
					]
				}
			}
      
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
